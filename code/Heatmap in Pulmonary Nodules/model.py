import tensorflow as tf
import tensorflow.contrib.layers as layers


def heatmap_g(image):
  with tf.variable_scope('CPM'):
    conv1_1 = layers.conv2d(image, 64, 3, 1, activation_fn=None, scope='conv1_1')
    conv1_1 = tf.nn.relu(conv1_1)
    conv1_2 = layers.conv2d(conv1_1, 64, 3, 1, activation_fn=None, scope='conv1_2')
    conv1_2 = tf.nn.relu(conv1_2)
    pool1_stage1 = layers.max_pool2d(conv1_2, 2, 2)
    conv2_1 = layers.conv2d(pool1_stage1, 128, 3, 1, activation_fn=None, scope='conv2_1')
    conv2_1 = tf.nn.relu(conv2_1)
    conv2_2 = layers.conv2d(conv2_1, 128, 3, 1, activation_fn=None, scope='conv2_2')
    conv2_2 = tf.nn.relu(conv2_2)
    pool2_stage1 = layers.max_pool2d(conv2_2, 2, 2)
    conv3_1 = layers.conv2d(pool2_stage1, 256, 3, 1, activation_fn=None, scope='conv3_1')
    conv3_1 = tf.nn.relu(conv3_1)
    conv3_2 = layers.conv2d(conv3_1, 256, 3, 1, activation_fn=None, scope='conv3_2')
    conv3_2 = tf.nn.relu(conv3_2)
    conv3_3 = layers.conv2d(conv3_2, 256, 3, 1, activation_fn=None, scope='conv3_3')
    conv3_3 = tf.nn.relu(conv3_3)
    conv3_4 = layers.conv2d(conv3_3, 256, 3, 1, activation_fn=None, scope='conv3_4')
    conv3_4 = tf.nn.relu(conv3_4)
    
    pool3_stage1 = layers.max_pool2d(conv3_4, 2, 2)
    conv4_1 = layers.conv2d(pool3_stage1, 512, 3, 1, activation_fn=None, scope='conv4_1')
    conv4_1 = tf.nn.relu(conv4_1)
    conv4_2 = layers.conv2d(conv4_1, 512, 3, 1, activation_fn=None, scope='conv4_2')
    conv4_2 = tf.nn.relu(conv4_2)
    conv4_3 = layers.conv2d(conv4_2, 512, 3, 1, activation_fn=None, scope='conv4_3')
    conv4_3 = tf.nn.relu(conv4_3)
    conv4_4 = layers.conv2d(conv4_3, 512, 3, 1, activation_fn=None, scope='conv4_4')
    conv4_4 = tf.nn.relu(conv4_4)
    conv5_1 = layers.conv2d(conv4_4, 512, 3, 1, activation_fn=None, scope='conv5_1')
    conv5_1 = tf.nn.relu(conv5_1)
    conv5_2_CPM = layers.conv2d(conv5_1, 128, 3, 1, activation_fn=None, scope='conv5_2_CPM')
    conv5_2_CPM = tf.nn.relu(conv5_2_CPM)
    conv6_1_CPM = layers.conv2d(conv5_2_CPM, 512, 1, 1, activation_fn=None, scope='conv6_1_CPM')
    conv6_1_CPM = tf.nn.relu(conv6_1_CPM)
    conv6_2_CPM = layers.conv2d(conv6_1_CPM, 1, 1, 1, activation_fn=None, scope='conv6_2_CPM')
    concat_stage2 = tf.concat(axis=3, values=[conv6_2_CPM, conv5_2_CPM])
    Mconv1_stage2 = layers.conv2d(concat_stage2, 128, 7, 1, activation_fn=None, scope='Mconv1_stage2')
    Mconv1_stage2 = tf.nn.relu(Mconv1_stage2)
    Mconv2_stage2 = layers.conv2d(Mconv1_stage2, 128, 7, 1, activation_fn=None, scope='Mconv2_stage2')
    Mconv2_stage2 = tf.nn.relu(Mconv2_stage2)
    Mconv3_stage2 = layers.conv2d(Mconv2_stage2, 128, 7, 1, activation_fn=None, scope='Mconv3_stage2')
    Mconv3_stage2 = tf.nn.relu(Mconv3_stage2)
    Mconv4_stage2 = layers.conv2d(Mconv3_stage2, 128, 7, 1, activation_fn=None, scope='Mconv4_stage2')
    Mconv4_stage2 = tf.nn.relu(Mconv4_stage2)
    Mconv5_stage2 = layers.conv2d(Mconv4_stage2, 128, 7, 1, activation_fn=None, scope='Mconv5_stage2')
    Mconv5_stage2 = tf.nn.relu(Mconv5_stage2)
    Mconv6_stage2 = layers.conv2d(Mconv5_stage2, 128, 1, 1, activation_fn=None, scope='Mconv6_stage2')
    Mconv6_stage2 = tf.nn.relu(Mconv6_stage2)
    Mconv7_stage2 = layers.conv2d(Mconv6_stage2, 1, 1, 1, activation_fn=None, scope='Mconv7_stage2')
    concat_stage3 = tf.concat(axis=3, values=[Mconv7_stage2, conv5_2_CPM])
    Mconv1_stage3 = layers.conv2d(concat_stage3, 128, 7, 1, activation_fn=None, scope='Mconv1_stage3')
    Mconv1_stage3 = tf.nn.relu(Mconv1_stage3)
    Mconv2_stage3 = layers.conv2d(Mconv1_stage3, 128, 7, 1, activation_fn=None, scope='Mconv2_stage3')
    Mconv2_stage3 = tf.nn.relu(Mconv2_stage3)
    Mconv3_stage3 = layers.conv2d(Mconv2_stage3, 128, 7, 1, activation_fn=None, scope='Mconv3_stage3')
    Mconv3_stage3 = tf.nn.relu(Mconv3_stage3)
    Mconv4_stage3 = layers.conv2d(Mconv3_stage3, 128, 7, 1, activation_fn=None, scope='Mconv4_stage3')
    Mconv4_stage3 = tf.nn.relu(Mconv4_stage3)
    Mconv5_stage3 = layers.conv2d(Mconv4_stage3, 128, 7, 1, activation_fn=None, scope='Mconv5_stage3')
    Mconv5_stage3 = tf.nn.relu(Mconv5_stage3)
    Mconv6_stage3 = layers.conv2d(Mconv5_stage3, 128, 1, 1, activation_fn=None, scope='Mconv6_stage3')
    Mconv6_stage3 = tf.nn.relu(Mconv6_stage3)
    Mconv7_stage3 = layers.conv2d(Mconv6_stage3, 1, 1, 1, activation_fn=None, scope='Mconv7_stage3')
    concat_stage4 = tf.concat(axis=3, values=[Mconv7_stage3, conv5_2_CPM])
    Mconv1_stage4 = layers.conv2d(concat_stage4, 128, 7, 1, activation_fn=None, scope='Mconv1_stage4')
    Mconv1_stage4 = tf.nn.relu(Mconv1_stage4)
    Mconv2_stage4 = layers.conv2d(Mconv1_stage4, 128, 7, 1, activation_fn=None, scope='Mconv2_stage4')
    Mconv2_stage4 = tf.nn.relu(Mconv2_stage4)
    Mconv3_stage4 = layers.conv2d(Mconv2_stage4, 128, 7, 1, activation_fn=None, scope='Mconv3_stage4')
    Mconv3_stage4 = tf.nn.relu(Mconv3_stage4)
    Mconv4_stage4 = layers.conv2d(Mconv3_stage4, 128, 7, 1, activation_fn=None, scope='Mconv4_stage4')
    Mconv4_stage4 = tf.nn.relu(Mconv4_stage4)
    Mconv5_stage4 = layers.conv2d(Mconv4_stage4, 128, 7, 1, activation_fn=None, scope='Mconv5_stage4')
    Mconv5_stage4 = tf.nn.relu(Mconv5_stage4)
    Mconv6_stage4 = layers.conv2d(Mconv5_stage4, 128, 1, 1, activation_fn=None, scope='Mconv6_stage4')
    Mconv6_stage4 = tf.nn.relu(Mconv6_stage4)
    #Mconv7_stage4 = layers.conv2d(Mconv6_stage4, 1, 1, 1, activation_fn=None, scope='Mconv7_stage4')
    Dconv1_stage5 = layers.conv2d_transpose(Mconv6_stage4, 64, 4, stride=2, padding='same',biases_initializer=tf.zeros_initializer())
    Dconv1_stage5 = tf.nn.relu(Dconv1_stage5)
    
    Dconv2_stage5 = layers.conv2d_transpose(conv3_4, 32, 4, stride=2, padding='same',biases_initializer=tf.zeros_initializer())
    Dconv2_stage5 = tf.nn.relu(Dconv2_stage5)
    Dconv3_stage5 = layers.conv2d_transpose(Dconv2_stage5, 1, 4, stride=2, padding='same',biases_initializer=tf.zeros_initializer())
  return Dconv3_stage5